int func(vector<int>& nums,int n,long long int lim)
    {
        int partitions=1,num=0;
        for(int i=0;i<n;i++)
        {
            if(num+nums[i]<=lim)
            num+=nums[i];
            else
            {
                partitions++;
                num=nums[i];
            }
        }
        return partitions;
    }
    int splitArray(vector<int>& nums, int k) {
        int n=nums.size();
        long long int low=*max_element(nums.begin(),nums.end());
        long long int high=accumulate(nums.begin(),nums.end(),0);
        int ans=-1;
        while(low<=high)
        {
            long long int mid=(low+high)/2;
            if(func(nums,n,mid)>k)
            low=mid+1;
            else
            {
                ans=mid;
                high=mid-1;
            }
        }
        return ans;
    }
