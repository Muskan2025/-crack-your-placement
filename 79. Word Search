class Solution {
public:
    int delrow[4]={-1,0,1,0};
    int delcol[4]={0,1,0,-1};
    bool is_safe(int row,int col,int n,int m)
    {
        return (row>=0 && row<n && col>0 && col<m);
    }
    bool check(vector<vector<char>>& board,int row,int col,int ind,string word,int n,int m)
    {
        if(ind==word.length())
        return true;
        if(!is_safe(row,col,n,m) || board[row][col]=='$')
        {
            return false;
        }
        if(board[row][col]!=word[ind])
        return false;
        char temp=board[row][col];
        board[row][col]='$';
        for(int i=0;i<4;i++)
        {
            int new_i=row+delrow[i];
            int new_j=col+delcol[i];
           if(check(board,new_i,new_j,ind+1,word,n,m))
           return true;
        }
        board[row][col]=temp;
        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int n=board.size();
        int m=board[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(board[i][j]==word[0] && check(board,i,j,0,word,n,m))
                {
                    return true;
                }
            }
        }
        return false;
    }
};
